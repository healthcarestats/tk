install.packages("gemtc")
install.packages("meta")
data(Fleiss93cont)
library(meta)
data(Fleiss93cont)
Fleiss93cont
install.packages netmeta
install.packages("net.security")
install.packages("netmeta")
75.90-0.74
151.06-75.9
install.packages('tinytex')
tinytex::install_tinytex()
install_tinytex(force = TRUE)
install.packages('tinytex')
install.packages("tinytex")
install_tinytex(force = TRUE)
install.packages("devtools")
library(devtools)
install_version("rmarkdown",version=1.8)
remove.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages('tinytex')
meta_era
370000/68
370000/68*57
library(gemtc)
hfPrevention
regressor <- list(coefficient='shared',
variable='secondary',
control='control')
model <- mtc.model(hfPrevention,
type="regression",
regressor=regressor,
hy.prior=mtc.hy.prior("std.dev", "dunif", 0, 5))
result <- mtc.run(model)
model <- list(likelihood="poisson", link="log")
ll.call("scale.name", model)
ll.call("mtc.arm.mle", model, c('responders'=12, 'exposure'=80))
exp(-1.856298)
12/80
hfPrevention
model <- list(likelihood="binom", link="cloglog")
ll.call("scale.name", model)
ll.call("mtc.arm.mle", model, c('responders'=12, 'exposure'=80))
hfPrevention
library(gemtc)
hfPrevention
hfPrevention
help(model)
install.packages("R2WinBUGS")
install.packages(BCEA)
install.packages("BCEA")
install.packages("BCEA")
install.packages("BCEA")
install.packages("installr")
require(installr)
updateR()
install.packages("BCEA")
install.packages(c("backports", "callr", "clipr", "curl", "evaluate", "git2r", "httr", "igraph", "jsonlite", "knitr", "markdown", "meta", "netmeta", "openssl", "processx", "ps", "R6", "Rglpk", "rlang", "rmarkdown", "rstudioapi", "slam", "stringi", "stringr", "tinytex", "xfun"))
install.packages(c("backports", "BH", "bookdown", "class", "cli", "codetools", "colorspace", "curl", "devtools", "digest", "dplyr", "evaluate", "foreign", "ggmap", "ggplot2", "git2r", "glue", "httpuv", "httr", "igraph", "jsonlite", "knitr", "later", "lattice", "markdown", "MASS", "Matrix", "meta", "mgcv", "mime", "netmeta", "openssl", "packrat", "pdftools", "pillar", "pkgconfig", "purrr", "R6", "Rcpp", "RCurl", "Rglpk", "RgoogleMaps", "rjags", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "RSelenium", "rstudioapi", "shiny", "slam", "stringi", "stringr", "survival", "tibble", "tidyselect", "tinytex", "xfun", "XML", "xtable"), lib="C:/Users/meresz.gergo/Documents/R/R-3.5.2/library")
install.packages(BCEA)
install.packages("BCEA")
pkgs <- c("MASS","Rtools","devtools")
repos <- c("https://cran.rstudio.com", "https://www.math.ntnu.no/inla/R/stable")
install.packages(pkgs,repos=repos,dependencies = "Depends")
install.packages("RTools")
install.packages("Rtools")
devtools::install_github("giabaio/BCEA")
install.packages("BCEA")
2*pt(0.2366497, 122+76-2, lower=FALSE)
(10-0)/sqrt(((17.35^2)/122)+((17.35^2)/76))
(5-0)/sqrt(((17.35^2)/122)+((17.35^2)/76))
2*pt(1.972081, 122+76-2, lower=FALSE)
z_score <- (63-100)/3.3
prob_h0 <- 2*pnorm(-abs(z_score))
prob_h0
2*pnorm(-abs(z_score))
2*pnorm(-abs(1.96))
2*pnorm((1.96))
2*pnorm(1.96)
2*pnorm(1.96)-2
exp(2.49738)
exp(-0.03388)
library(titanic)
install.packages(titanic)
install.packages("titanic")
help("glm")
head(Titanic)
head(titanic)
data(``Titanic'')
data("Titanic")
data(Titanic)
titanic::titanic_train
colnames(titanic::titanic_train
)
colnames(titanic::titanic_train)
# Konyvtarak beolvasasa
library(mailR)
library(RSQLite)
### Ujonnan torzskonyvezett keszitmenyek
setwd("c:/gergo/tk")
download.file("https://www.ogyei.gov.hu/generalt_listak/tk_lista.csv", "adatok/tk_lista.csv")
adat <- read.csv("adatok/tk_lista.csv", sep=";")
adat <- adat[,-ncol(adat)]
colnames(adat) <- c('tkszam', 'nev', 'kiszereles', 'inn', 'atc', 'forgeng', 'kiadhatosag', 'kiad_alcs', 'biztonsag', 'tk_datum', 'veglegminta', 'alaki_hiba', 'termekhiany')
tkszam <- adat$tkszam
# adatbazis letrehozasa
mydb <- dbConnect(SQLite(), "tkmonitor.sqlite")
dbWriteTable(mydb, "main", adat)
dbListTables(mydb)
conn <- dbConnect(sqlite,"tkmonitor.sqlite")
conn <- dbConnect(SQLite(),"tkmonitor.sqlite")
tkszam_upd <- tkszam[which(!(tkszam %in% dbReadTable(conn, "main", row.names=F)$tkszam))]
tkszam_upd
tkszam
dbReadTable(conn, "main", row.names=F)$tkszam)
dbReadTable(conn, "main", row.names=F)$tkszam
tkszam
tkszam_upd
length(links_upd)
length(tkszam_upd)
which(adat$tkszam %in% tkszam_upd)
